<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns="http://www.siri.org.uk/siri" xmlns:acsb="http://www.ifopt.org.uk/acsb" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.siri.org.uk/siri" version="1.3" id="siri_common" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:include schemaLocation="siri_location-v1.1.xsd" />
  <xsd:include schemaLocation="siri_requests-v1.2.xsd" />
  <xsd:annotation>
    <xsd:appinfo>
      <Metadata xmlns="http://www.govtalk.gov.uk/CM/gms-xs">
        <Aggregation>main schema</Aggregation>
        <Audience>e-service developers</Audience>
        <Contributor> Cen TC278 WG3 SG7 Team</Contributor>
        <Coverage>Europe</Coverage>
        <Creator>Drafted for version 1.0  Cen TC278 WG3 SG7 Editor Nicholas Knowles, Kizoom. mailto:schemer@siri.org.uk</Creator>
        <Date>
          <Created>2004-09-29</Created>
        </Date>
        <Date>
          <Modified>2005-02-14</Modified>
        </Date>
        <Date>
          <Modified>2005-02-20</Modified>
        </Date>
        <Date>
          <Modified>2005-05-11</Modified>
        </Date>
        <Date>
          <Modified>2007-04-17</Modified>
          <!-- Name Space changes -->
        </Date>
        <Date>
          <Modified>2008-10-09</Modified>
          <!-- Add Subscriber ref to TermninateSubscription Request   -->
        </Date>
        <Date>
          <Modified>2008-11-17</Modified>
          <!-- Revsie for subst grousp and move down to siri subdirectory  -->
        </Date>
        <Description>
          <p>SIRI is a European CEN standard for the exchange of real time information.</p>
          <p>This subschema describes common communication requests that are the same for all services. </p>
          <p>Siri supports both direct requests and publish subscribe patterns of interaction</p>
        </Description>
        <Format>
          <MediaType>text/xml</MediaType>
          <Syntax>http://www.w3.org/2001/XMLSchema</Syntax>
          <Description>XML schema, W3C Recommendation 2001</Description>
        </Format>
        <Identifier>{http://www.siri.org.uk/schemas/1.3}siri_common.xsd</Identifier>
        <Language>[ISO 639-2/B] ENG</Language>
        <Publisher>Kizoom, 109-123 Clifton Street, London EC4A 4LD </Publisher>
        <Relation>
          <Requires>http://www.siri.org.uk/schemas/1.2/siri/siri_requests-v1.1.xsd</Requires>
        </Relation>
        <Rights>Unclassified
                            <Copyright>CEN, VDV, RTIG  2004,2005</Copyright></Rights>
        <Source>
          <ul>
            <li>Derived from the VDV, RTIG XML and Trident standards.</li>
          </ul>
        </Source>
        <Status>Version 1.1 Draft for approval</Status>
        <Subject>
          <Category>Arts, recreation and travel, Tourism, Travel (tourism), Transport,
Air transport, Airports,
Ports and maritime transport, Ferries (marine),
Public transport, Bus services, Coach services, Bus stops and stations,
Rail transport, Railway stations and track, Train services, Underground trains,
Business and industry, Transport, Air transport , Ports and maritime transport, Public transport,
Rail transport, Roads and road transport
</Category>
          <Project>Cen TC278 WG3 SG7</Project>
        </Subject>
        <Title>SIRI XML schema. Service Interface for Real Time Information. Common Requests </Title>
        <Type>Standard</Type>
      </Metadata>
    </xsd:appinfo>
  </xsd:annotation>
  <xsd:group name="SiriCommonIndexGroup">
    <xsd:annotation>
      <xsd:documentation>Convenience artefact to pick out main elements of the common requests  .</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="SubscriptionManagementGroup" />
      <xsd:group ref="DataSupplyGroup" />
      <xsd:group ref="StatusRequestGroup" />
      <xsd:group ref="StatusResponseGroup" />
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="StatusRequestGroup">
    <xsd:annotation>
      <xsd:documentation>Requests about system status.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="CheckStatusRequest" />
      <xsd:element ref="HeartbeatNotification" />
    </xsd:choice>
  </xsd:group>
  <xsd:complexType name="ContextualisedRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Type for General SIRI Request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="ServiceRequestContext" type="ServiceRequestContextStructure">
        <xsd:annotation>
          <xsd:documentation>General request properties - typically configured rather than repeated on request. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="RequestTimestamp" />
      <xsd:group ref="RequestorEndpointGroup" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="ServiceEndpointAddressGroup">
    <xsd:annotation>
      <xsd:documentation>Addresses for SIRI messages to the Producer server.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="CheckStatusAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which CheckStatus requests are to be sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="SubscribeAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which subscription requests are to be sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ManageSubscriptionAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which subscription requests are to be sent. If absent, same as SubscribeAddress.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="GetDataAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which requests are to return data.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ClientEndpointAddressGroup">
    <xsd:annotation>
      <xsd:documentation>Addresses for SIRI messages to the Subscriber/Consumer client.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="StatusResponseAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which CheckStatus responses and heartbeats are to be sent. If absent, same as SubscriberAddress.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="SubscriberAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which subscription responses are to be sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="NotifyAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which notifcations requests are to be sent. If absent, same as SubscriberAddress.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ConsumerAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Address to which data is  to be sent. If absent, same as NotifyAddress.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="ServiceRequestContextStructure">
    <xsd:annotation>
      <xsd:documentation>Configurable context for requests. Intended Primarily as a documentation mechanism.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="ServiceEndpointAddressGroup" />
      <xsd:group ref="ClientEndpointAddressGroup" />
      <xsd:group ref="ReferenceContextGroup" />
      <xsd:group ref="TemporalContextGroup" />
      <xsd:group ref="DeliveryContextGroup" />
      <xsd:group ref="ResourceContextGroup" />
      <xsd:group ref="PredictionMethodGroup" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="DeliveryContextGroup">
    <xsd:annotation>
      <xsd:documentation>Delivery options.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" default="direct" name="DeliveryMethod" type="DeliveryMethodEnumeration">
        <xsd:annotation>
          <xsd:documentation>Whether Delivery is fetched or retrieved.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="MultipartDespatch" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether multi-part delivery is allowed, i.e. the breaking up of updates into more than one delivery messages with a MoreData flag,</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" default="false" name="ConfirmDelivery" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether Consumers should issue an acknowledgement on successful receipt of a delivery. Default false.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:simpleType name="DeliveryMethodEnumeration">
    <xsd:annotation>
      <xsd:documentation>Delivery Method: Fetched or Direct Delivery.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="direct" />
      <xsd:enumeration value="fetched" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:group name="PredictionMethodGroup">
    <xsd:annotation>
      <xsd:documentation> Prediction options.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" default="anyone" name="AllowedPredictors" type="PredictorsEnumeration">
        <xsd:annotation>
          <xsd:documentation>Who may make a prediction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="PredictionFunction" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Name of prediction method used.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:simpleType name="PredictorsEnumeration">
    <xsd:annotation>
      <xsd:documentation>Allowed values for predictors.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="avmsOnly" />
      <xsd:enumeration value="anyone" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:group name="TemporalContextGroup">
    <xsd:annotation>
      <xsd:documentation>Timing related elements in Request Context:</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DataHorizon" type="PositiveDurationType">
        <xsd:annotation>
          <xsd:documentation>Maximum data horizon for requests.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="RequestTimeout" type="PositiveDurationType">
        <xsd:annotation>
          <xsd:documentation>Timeout for requests. [Should this be separate for each type?]</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DataNameSpacesStructure">
    <xsd:annotation>
      <xsd:documentation>Name spaces.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="StopPointNameSpace" type="xsd:anyURI">
        <xsd:annotation>
          <xsd:documentation>Name space for stop points.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="LineNameSpace" type="xsd:anyURI">
        <xsd:annotation>
          <xsd:documentation>Name space for line names and directionss.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ProductCategoryNameSpace" type="xsd:anyURI">
        <xsd:annotation>
          <xsd:documentation>Name space for product categories.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ServiceFeatureNameSpace" type="xsd:anyURI">
        <xsd:annotation>
          <xsd:documentation>Name space for service features</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="VehicleFeatureNameSpace" type="xsd:anyURI">
        <xsd:annotation>
          <xsd:documentation>Name space for vehicle features.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="ReferenceContextGroup">
    <xsd:annotation>
      <xsd:documentation>Namespace related elements in Request Context.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="DataNameSpaces" type="DataNameSpacesStructure">
        <xsd:annotation>
          <xsd:documentation>Default names pace used to scope data identifiers.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" default="en" name="Language" type="xsd:language">
        <xsd:annotation>
          <xsd:documentation>Preferred language in which to return  text  values.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Default geospatial Coordinates used by service.</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="WgsDecimalDegrees" type="EmptyType">
          <xsd:annotation>
            <xsd:documentation>Geospatial coordinates are given as Wgs 84 Latiude and longitude, decimial degrees of arc.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="GmlCoordinateFormat" type="SrsNameType">
          <xsd:annotation>
            <xsd:documentation>Name of GML Coordinate format used for Geospatial points in responses.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResourceContextGroup">
    <xsd:annotation>
      <xsd:documentation>Resources related elements in Request Context.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="MaximimumNumberOfSubscriptions" type="xsd:positiveInteger">
        <xsd:annotation>
          <xsd:documentation>Maximum Number of subscriptions that can be sustained by the subscriber. If absent no limit.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="SubscriptionManagementGroup">
    <xsd:annotation>
      <xsd:documentation>groups the subscription request</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="SubscriptionResponse" />
      <xsd:element ref="TerminateSubscriptionRequest" />
      <xsd:element ref="TerminateSubscriptionResponse" />
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="TerminateSubscriptionRequest" substitutionGroup="AbstractTrackedRequest" type="TerminateSubscriptionRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Request from Subscriber to Subscription Manager to terminate a subscription. Answered with a TerminateSubscriptionResponse. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="TerminateSubscriptionRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Request to terminate of a subscription or subscriptions</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="RequestStructure">
        <xsd:sequence>
          <xsd:group ref="TerminateSubscriptionTopicGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="TerminateSubscriptionTopicGroup">
    <xsd:annotation>
      <xsd:documentation>Parameters that specify the content to be processed.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SubscriberRef" type="ParticipantRefStructure">
        <xsd:annotation>
          <xsd:documentation>Participant Identifier of Subscriber. Subscription ref will be unique within this.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="All" type="EmptyType">
          <xsd:annotation>
            <xsd:documentation>Terminate all subscriptions for the requestor.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="SubscriptionRef" type="SubscriptionQualifierStructure">
          <xsd:annotation>
            <xsd:documentation>Terminate the subscription identfiied by the reference.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TerminationStatusGroup">
    <xsd:annotation>
      <xsd:documentation>Status Info.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="TerminationResponseStatus">
        <xsd:annotation>
          <xsd:documentation>Status of each subscription termnination response</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" ref="ResponseTimestamp" />
            <xsd:group ref="ContextualisedResponseEndpointGroup" />
            <xsd:group minOccurs="0" ref="SubscriptionIdentifierResourcePropertyGroup" />
            <xsd:element ref="Status" />
            <xsd:element minOccurs="0" name="ErrorCondition">
              <xsd:annotation>
                <xsd:documentation>Description of any error or warning condition.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:choice>
                    <xsd:element ref="CapabilityNotSupportedError" />
                    <xsd:element ref="UnknownSubscriberError" />
                    <xsd:element ref="UnknownSubscriptionError" />
                    <xsd:element ref="OtherError" />
                  </xsd:choice>
                  <xsd:element minOccurs="0" name="Description" type="ErrorDescriptionStructure">
                    <xsd:annotation>
                      <xsd:documentation>Text description of error.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="TerminateSubscriptionResponse" substitutionGroup="AbstractResponse" type="TerminateSubscriptionResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Request from Subscriber to Subscription Manager to terminate a subscription. Answered with a TerminateSubscriptionResponse. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="TerminateSubscriptionResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Response to a request to terminate a subscription or subscriptions</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ResponseEndpointStructure">
        <xsd:sequence>
          <xsd:group ref="TerminationStatusGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="StatusResponseGroup">
    <xsd:annotation>
      <xsd:documentation>Responses that infrom about the service status.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="CheckStatusResponse" />
    </xsd:choice>
  </xsd:group>
  <xsd:element name="ResponseStatus" type="StatusResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Contains infromation about the processign of a an individual service subscription - either  success info or an error condition. (VDV Acknowledgement).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="StatusResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Response Status</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ResponseStructure">
        <xsd:sequence>
          <xsd:group ref="ContextualisedResponseEndpointGroup" />
          <xsd:group minOccurs="0" ref="SubscriptionIdentifierResourcePropertyGroup" />
          <xsd:element minOccurs="0" ref="Status" />
          <xsd:element minOccurs="0" name="ErrorCondition" type="ServiceDeliveryErrorConditionStructure">
            <xsd:annotation>
              <xsd:documentation>Description of any error or warning condition.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:group ref="SuccessInfoGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscriptionResponse" substitutionGroup="AbstractResponse" type="SubscriptionResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Response from Producer to Consumer to inform whether subscriptions have been created.  Answers a previous SubscriptionRequest.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SubscriptionResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Subscription Response.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ResponseEndpointStructure">
        <xsd:sequence>
          <xsd:group ref="SubscriptionResponsePayloadGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="SubscriptionResponsePayloadGroup">
    <xsd:annotation>
      <xsd:documentation>Subscription Response  content.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="ResponseStatus" />
      <xsd:element minOccurs="0" name="SubscriptionManagerAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Endpoint address of subscription manager if different from that of the Producer or known default.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ServiceStartedTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time at which service providing the subscription was last started. Can be used to detect restarts. If absent, unknown.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="Extensions" />
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="DataReadyNotification" substitutionGroup="ProducerRequest" type="DataReadyRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Request from Producer to Consumer to notify that data update is ready to fetch. Answered with a DataReadyResponse. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:group name="DataSupplyGroup">
    <xsd:annotation>
      <xsd:documentation>Groups the data supply messages</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="DataReadyNotification" />
      <xsd:element ref="DataSupplyRequest" />
      <xsd:element ref="DataReceivedAcknowledgement" />
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DataReadyRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Request from Producer to Consumer to notify that data update is ready to fetch. Answered with a DataReadyResponse. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="AbstractNotificationStructure" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DataReadyAcknowledgement" substitutionGroup="AbstractResponse" type="DataReadyResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Response from Consumer to Producer to acknowledge to Producer that a DataReadyRequest has been received.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="DataReadyResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Data ready Acknowledgement Response. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ConsumerResponseEndpointStructure">
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="Status" />
          <xsd:element minOccurs="0" name="ErrorCondition">
            <xsd:annotation>
              <xsd:documentation>Description of any error or warning condition as to why Consumer cannot fetch data.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice>
                  <xsd:element ref="UnknownSubscriptionError" />
                  <xsd:element ref="OtherError" />
                </xsd:choice>
                <xsd:sequence>
                  <xsd:element minOccurs="0" name="Description" type="ErrorDescriptionStructure">
                    <xsd:annotation>
                      <xsd:documentation>Text description of error.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="DataSupplyTopicGroup">
    <xsd:annotation>
      <xsd:documentation>Specifies content to be included in data supply.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="NotificationRef" type="MessageRefStructure">
        <xsd:annotation>
          <xsd:documentation>Identifier of specific notification message for which data is to be fetched. Can be used to distinguish between notfcatiosn for the same service and subscriber but for different filters.If none specified,  </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" default="false" name="AllData" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether to return all data, or just new updates since the last delivery.  Default false, i.e. just updates.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="DataSupplyRequest" substitutionGroup="AbstractRequest" type="DataSupplyRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Request from Consumer to Producer to fetch update previously notified by a Data ready message. Answered with a Service Delivery. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="DataSupplyRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Data supply Request</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ConsumerRequestEndpointStructure">
        <xsd:sequence>
          <xsd:group ref="DataSupplyTopicGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="DataReceivedAcknowledgement" substitutionGroup="AbstractResponse" type="DataReceivedResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Response from Consumer to Producer to acknowledge that data hase been received. Used as optioanl extra step if reliable delivery is needed. Answers a ServiceDelivery </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:group name="DataReceivedPayloadGroup">
    <xsd:annotation>
      <xsd:documentation>Data received Acknowledgement content.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="Status" />
      <xsd:element minOccurs="0" name="ErrorCondition">
        <xsd:annotation>
          <xsd:documentation>Description of any error or warning condition.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice>
              <xsd:element ref="UnknownSubscriptionError" />
              <xsd:element ref="OtherError" />
            </xsd:choice>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Description" type="ErrorDescriptionStructure">
                <xsd:annotation>
                  <xsd:documentation>Text description of error.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DataReceivedResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Data received Acknowledgement Response.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ConsumerResponseEndpointStructure">
        <xsd:sequence>
          <xsd:group ref="DataReceivedPayloadGroup" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="DeliveryEndpointGroup">
    <xsd:annotation>
      <xsd:documentation>Identifier of Consumer, i.e. requestor, if synchronous delivery or subscriber if  asynchronous.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="RequestorRef" />
      <xsd:element minOccurs="0" name="MessageRef" type="MessageQualifierStructure">
        <xsd:annotation>
          <xsd:documentation>Reference to an arbitrary unique reference associated with the request which gave rise to this response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="CheckStatusRequest" substitutionGroup="AbstractTrackedRequest" type="CheckStatusRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Request from Consumer to Producer to check whether services is working.  Answers a CheckStatusRequest.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="CheckStatusRequestStructure">
    <xsd:annotation>
      <xsd:documentation>Type for check status request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="RequestStructure">
        <xsd:sequence>
          <xsd:element minOccurs="0" ref="Extensions" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:group name="CheckStatusPayloadGroup">
    <xsd:annotation>
      <xsd:documentation>Data received AcknowledgementService Status Check Request  content.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="Status" />
      <xsd:element minOccurs="0" name="ErrorCondition">
        <xsd:annotation>
          <xsd:documentation>Description of any error or warning condition that applies to the status check.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice>
              <xsd:element ref="ServiceNotAvailableError" />
              <xsd:element ref="OtherError" />
            </xsd:choice>
            <xsd:element minOccurs="0" name="Description" type="ErrorDescriptionStructure">
              <xsd:annotation>
                <xsd:documentation>Text description of error.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:group ref="SuccessInfoGroup" />
      <xsd:element minOccurs="0" name="ServiceStartedTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time at which current instantiation of service started. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:element name="CheckStatusResponse" substitutionGroup="AbstractResponse" type="CheckStatusResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Response from Producer to Consumer to inform whether services is working.  Answers a CheckStatusRequest.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="CheckStatusResponseStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Service Status Check Response.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ResponseStructure">
        <xsd:sequence>
          <xsd:group ref="ProducerResponseEndpointGroup" />
          <xsd:group ref="CheckStatusPayloadGroup" />
          <xsd:element minOccurs="0" ref="Extensions" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="HeartbeatNotification" substitutionGroup="ProducerRequest" type="HeartbeatNotificationStructure">
    <xsd:annotation>
      <xsd:documentation>Notification from  Producer to Consumer to indicate that the service is running normally. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="HeartbeatNotificationStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Service Heartbeat Notification.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="ProducerRequestEndpointStructure">
        <xsd:sequence>
          <xsd:group ref="CheckStatusPayloadGroup" />
          <xsd:element minOccurs="0" ref="Extensions" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionResponseBodyStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Body of Subscription Response. Used in WSDL.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" ref="ResponseStatus" />
      <xsd:element minOccurs="0" name="SubscriptionManagerAddress" type="EndpointAddress">
        <xsd:annotation>
          <xsd:documentation>Endpoint address of subscription manager if different from that of the Producer or known default.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="ServiceStartedTime" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time at which service providing the subscription was last started. Can be used to detect restarts. If absent, unknown.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TerminateSubscriptionRequestBodyStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Body of Terminate Subscription Request content. Used in WSDL.           </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="TerminateSubscriptionTopicGroup" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DataSupplyRequestBodyStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Body of Data Supply Request. Used in WSDL</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="DataSupplyTopicGroup" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CheckStatusResponseBodyStructure">
    <xsd:annotation>
      <xsd:documentation>Type for Body of Service Status Check Response. Used in WSDL.</xsd:documentation>
      <xsd:documentation>Same as CheckStatusResponseStructure, but without extension to be consistent with the other operation definition.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:group ref="CheckStatusPayloadGroup" />
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>