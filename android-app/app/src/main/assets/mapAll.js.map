{"version":3,"file":"mapAll.js","sources":["mapMain.js","utils/distance.js","eventServices/mapCenterChanged.js","eventServices/stopAdded.js","nativeApp/nativeAppCallbacks/onLocationChanged.js","text.js","customControls/focusMapControl.html!text","require-css/normalize.js","require-css/css.js","map.js","customControls/focusMapControl!require-css/css","parseClient.js","stopCache.js","eventServices/mapStopClicked.js","mapStops.js","geolocationTracker.js","eventServices/addressEntered.js","searchBar.js","mapPageScroller.js","angular/tahanotApp.js","nativeApp/bridge.js","nativeApp/nativeAppCallbacks/onMonitoringInfoArrived.js","stopMonitoringCache.js","nativeApp/nativeAppCallbacks/setIsForWidget.js","angular/nearbyStopsController.js"],"names":["visualTouches","$","document","ready","height","window","width","navBarHeight","outerHeight","css","click","scrollPos","jQuery","find","this","attr","offset","top","animate","scrollTop","scrollspy","target","define","location1","location2","x","lat","y","lng","Math","sqrt","map","distance","centerBefore","callbacks","Callbacks","activeTimerId","broadcastDelayed","getCenter","clearTimeout","setTimeout","dist","fire","broadcastNow","listen","callback","add","broadcast","stop","onLocationChanged","lon","module","text","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","replace","defaultHostName","hostname","defaultPort","port","undefined","buildMap","masterConfig","config","version","strip","content","matches","match","jsEscape","createXhr","xhr","i","progId","XMLHttpRequest","ActiveXObject","e","parseName","name","modName","ext","temp","index","lastIndexOf","isRelative","indexOf","substring","moduleName","xdRegExp","useXhr","url","uProtocol","uHostName","uPort","exec","split","toLowerCase","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","get","err","error","write","pluginName","hasOwnProperty","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","node","require","nodeRequire","errback","file","readFileSync","headers","header","open","setRequestHeader","onXhr","onreadystatechange","status","readyState","Error","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","encoding","io","File","lineSeparator","lang","System","getProperty","input","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","length","charAt","append","String","toString","close","Components","classes","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","value","path","convertURIBase","uri","fromBase","toBase","absUrlRegEx","protocolRegEx","removeDoubleSlashes","toBaseProtocol","fromBaseProtocol","relativeURI","absoluteURI","base","substr","baseParts","uriParts","pop","curPart","shift","push","join","out","slashes","normalizeCSS","source","result","urlRegEx","newUrl","quoteLen","lastIndex","n","r","head","getElementsByTagName","engine","navigator","userAgent","useImportLoad","useOnload","parseInt","cssAPI","pluginBuilder","curStyle","curSheet","ieCurCallback","createStyle","createElement","appendChild","styleSheet","sheet","ieCnt","ieLoads","createIeLoad","addImport","onload","processIeLoad","nextLoad","importLoad","textContent","loadInterval","setInterval","cssRules","clearInterval","linkLoad","link","type","rel","styleSheets","normalize","cssId","mapCenterChanged","stopAdded","focusMapControlTemplate","initialize","initialLocation","google","maps","LatLng","Map","getElementById","center","streetViewControl","panControl","zoomControlOptions","style","ZoomControlStyle","SMALL","position","ControlPosition","RIGHT_BOTTOM","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","SATELLITE","zoom","registerMapEvents","geolocation","getCurrentPosition","pos","coords","updateLocation","latitude","longitude","locationUpdatedOnce","setCenter","locationMarker","setPosition","circle","SymbolPath","CIRCLE","fillColor","fillOpacity","scale","strokeColor","strokeWeight","Marker","icon","controlDiv","panTo","controls","event","addListener","addIdleListenerOnce","addListenerOnce","googleMap","extractStop","obj","code","town","getNearbyStops","point","Parse","GeoPoint","query","Query","Object","extend","near","limit","then","objs","getStopByCode","stopCode","equalTo","first","parseClient","exists","stops","byDistanceFrom","centerGeoPoint","stop1","stop2","distance1","kilometersTo","distance2","getStopsAround","centerLat","centerLng","maxDisatnceKm","nearbyStops","sort","addStopsAround","forEach","getOrAdd","d","Deferred","resolve","promise","stopCache","mapStopClicked","searchForStops","createStopMarker","stopMarker","title","image","size","Size","origin","Point","anchor","createLocationMarker","clickable","MarkerImage","shadow","zIndex","trackLocation","me","addressEntered","initSearchBar","autocomplete","places","Autocomplete","types","componentRestrictions","country","onAddressEntered","blurControls","collapse","blur","select","getLocation","address","geocoder","geocode","results","GeocoderStatus","OK","geometry","reject","isNaN","done","activeElement","parentElement","focus","Geocoder","scrollTo","selector","completeCallback","showOnMap","app","angular","$locationProvider","html5Mode","enabled","requireBase","onStopsDisplayed","wasStopDisplayedSent","AndroidBridge","onFirstStopDisplayed","console","log","onStopSelected","stopName","requestStopMonitoring","visit","ExpectedArrivalTime","PublishedLineName","DestinationRef","onMonitoringInfoArrived","Stops","MotiroringRef","StopVisits","Array","apply","_","ResponseTimestamp","initVisitsMap","stopCodes","visitsByStopCode","addVisits","monitoringInfo","monitoringStop","visits","minutesToArrival","minutesBetween","parseDate","lineNumber","destinationRef","isAlreadyHere","fireCallbacks","msAjaxDate","Date","olderDate","newerDate","floor","bridge","Stop","thisStop","ageOfData","lastRequestSent","deferreds","updateVisits","deferred","force","giveUpAfter","getOrAddStop","prepareToGiveUp","isRecent","getStop","time","cacheTimeout","setIsForWidget","isForWidget","tahanotApp","stopMonitoringCache","mapPageScroller","controller","$scope","$interval","refresh","regularStops","selectedStopCode","selectedStop","addStopModel","createStopModel","slice","isSelected","visitsAvailable","stopModel","getVisits","timelyRefresh","cancel","isReceivingVisits","failedReceivingVisits","callInScope","destinationStop","destination","$apply","f","$$phase","selectForWidget","refreshVisits","element","bootstrap","show","requirejs","*","c","a","s","cssText","createTextNode"],"mappings":"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","sourcesContent":["requirejs.config({\r\n\tmap: {\r\n\t\t'*': {\r\n\t\t\t'css': '../lib/js/require-css/css'\r\n\t\t}\r\n\t}\r\n});\r\n\r\nrequire([\"mapStops\"]);\r\nrequire([\"geolocationTracker\"]);\r\nrequire([\"searchBar\"]);\r\nrequire([\"mapPageScroller\"]);\r\nrequire([\"angular/nearbyStopsController\"]);\r\nrequire([\"nativeApp/nativeAppCallbacks/onMonitoringInfoArrived\"])\r\nrequire([\"nativeApp/nativeAppCallbacks/onLocationChanged\"])\r\nrequire([\"nativeApp/nativeAppCallbacks/setIsForWidget\"])\r\n\r\n\r\nfunction visualTouches() {\r\n\t// Set sections heights so they're prepared for navigation\r\n\t$(document).ready(function(){\r\n\t\t$(\"#map-section\").height($(window).height()).width(\"100%\");\r\n\t\t$(\"#hello-section\").height($(window).height()).width(\"100%\");\r\n\t\tvar navBarHeight = $(\"#navbar-main\").outerHeight();\r\n\t\t$(\".page-section\").css(\"padding-top\", navBarHeight);\r\n\t});\r\n\r\n\t// Make scrolling smooth\r\n\t$('.pagination a').click(function (event) {\r\n\t\tvar scrollPos = jQuery('body').find($(this).attr('href')).offset().top;\r\n\t\t$('body,html').animate({ scrollTop: scrollPos}, 500, function () {});\r\n\t\treturn false;\r\n\t});\r\n\r\n\t$('body').scrollspy({ target: '#navbar-main' })\r\n}\r\n\r\nParse.initialize(\"Yyxpr1XarbQvtfHNYWKHUGlFdKDjWttPKLYgMXBe\", \"xscYP2yXXd0udn26sXIhaCCIEW28pN2Ux2th2IJS\");\r\n\r\nvisualTouches();\r\n\r\n\ndefine(\"mapMain\", function(){});\n\n","define(\"utils/distance\", [],function() {\r\n    return function(location1, location2)\r\n    {\r\n      var x = location1.lat() - location2.lat();\r\n      var y = location1.lng() - location2.lng();\r\n      return Math.sqrt(x*x + y*y);\r\n    }\r\n});\n","define('eventServices/mapCenterChanged',[\"map\", \"utils/distance\"], function(map, distance) {\r\n\tvar callbacks = $.Callbacks();\r\n\r\n    var centerBefore;\r\n    var activeTimerId = null;\r\n\r\n    return {\r\n\t\tbroadcastDelayed: function(getCenter) {\r\n            if (activeTimerId) {\r\n                clearTimeout(activeTimerId);\r\n            }\r\n            centerBefore = getCenter();\r\n            activeTimerId = setTimeout(function() {\r\n                activeTimerId = null;\r\n                var dist = distance(centerBefore, getCenter());\r\n                if (dist > 0.001) {\r\n                    // Map is still moving\r\n                    return;\r\n                }\r\n                callbacks.fire();\r\n            }, 1000);\r\n        },\r\n\r\n        broadcastNow: function() {\r\n            callbacks.fire(); \r\n        },\r\n\r\n\t    listen: function(callback) { callbacks.add(callback); }\r\n\t};\r\n});\n","define('eventServices/stopAdded',[],function() {\r\n    var callbacks = $.Callbacks();\r\n\r\n    return {\r\n        broadcast: function(stop) { callbacks.fire(stop); },\r\n        listen: function(callback) { callbacks.add(callback); }\r\n    };\r\n});\n","define('nativeApp/nativeAppCallbacks/onLocationChanged',[],function() {\r\n    var callbacks = $.Callbacks();\r\n    \r\n    window.onLocationChanged = function(lat, lon) {\r\n        callbacks.fire(lat, lon);\r\n    };\r\n\r\n    return {\r\n        listen: function(callback) { callbacks.add(callback); }\r\n    }\r\n});\n","/**\n * @license RequireJS text 2.0.14 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.14',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!customControls/focusMapControl.html',[],function () { return '<div id=\"control-div\" class=\"control-div\">\\r\\n    <img class=\"circle\" src=\"images/center_direction-128.png\"/>\\r\\n</div>';});\n\n","//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n/*\n * css.normalize.js\n *\n * CSS Normalization\n *\n * CSS paths are normalized based on an optional basePath and the RequireJS config\n *\n * Usage:\n *   normalize(css, fromBasePath, toBasePath);\n *\n * css: the stylesheet content to normalize\n * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)\n * toBasePath: the absolute new base path of the css relative to the same root\n * \n * Absolute dependencies are left untouched.\n *\n * Urls in the CSS are picked up by regular expressions.\n * These will catch all statements of the form:\n *\n * url(*)\n * url('*')\n * url(\"*\")\n * \n * @import '*'\n * @import \"*\"\n *\n * (and so also @import url(*) variations)\n *\n * For urls needing normalization\n *\n */\n\ndefine('require-css/normalize',[],function() {\n  \n  // regular expression for removing double slashes\n  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here\n  var slashes = /([^:])\\/+/g\n  var removeDoubleSlashes = function(uri) {\n    return uri.replace(slashes, '$1/');\n  }\n\n  // given a relative URI, and two absolute base URIs, convert it from one base to another\n  var protocolRegEx = /[^\\:\\/]*:\\/\\/([^\\/])*/;\n  var absUrlRegEx = /^(\\/|data:)/;\n  function convertURIBase(uri, fromBase, toBase) {\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    uri = removeDoubleSlashes(uri);\n    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not\n    // use absolute path at fromBase\n    var toBaseProtocol = toBase.match(protocolRegEx);\n    var fromBaseProtocol = fromBase.match(protocolRegEx);\n    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))\n      return absoluteURI(uri, fromBase);\n    \n    else {\n      return relativeURI(absoluteURI(uri, fromBase), toBase);\n    }\n  };\n  \n  // given a relative URI, calculate the absolute URI\n  function absoluteURI(uri, base) {\n    if (uri.substr(0, 2) == './')\n      uri = uri.substr(2);\n\n    // absolute urls are left in tact\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    \n    var baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    \n    baseParts.pop();\n    \n    while (curPart = uriParts.shift())\n      if (curPart == '..')\n        baseParts.pop();\n      else\n        baseParts.push(curPart);\n    \n    return baseParts.join('/');\n  };\n\n\n  // given an absolute URI, calculate the relative URI\n  function relativeURI(uri, base) {\n    \n    // reduce base and uri strings to just their difference string\n    var baseParts = base.split('/');\n    baseParts.pop();\n    base = baseParts.join('/') + '/';\n    i = 0;\n    while (base.substr(i, 1) == uri.substr(i, 1))\n      i++;\n    while (base.substr(i, 1) != '/')\n      i--;\n    base = base.substr(i + 1);\n    uri = uri.substr(i + 1);\n\n    // each base folder difference is thus a backtrack\n    baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    out = '';\n    while (baseParts.shift())\n      out += '../';\n    \n    // finally add uri parts\n    while (curPart = uriParts.shift())\n      out += curPart + '/';\n    \n    return out.substr(0, out.length - 1);\n  };\n  \n  var normalizeCSS = function(source, fromBase, toBase) {\n\n    fromBase = removeDoubleSlashes(fromBase);\n    toBase = removeDoubleSlashes(toBase);\n\n    var urlRegEx = /@import\\s*(\"([^\"]*)\"|'([^']*)')|url\\s*\\((?!#)\\s*(\\s*\"([^\"]*)\"|'([^']*)'|[^\\)]*\\s*)\\s*\\)/ig;\n    var result, url, source;\n\n    while (result = urlRegEx.exec(source)) {\n      url = result[3] || result[2] || result[5] || result[6] || result[4];\n      var newUrl;\n      newUrl = convertURIBase(url, fromBase, toBase);\n      var quoteLen = result[5] || result[6] ? 1 : 0;\n      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);\n      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);\n    }\n    \n    return source;\n  };\n  \n  normalizeCSS.convertURIBase = convertURIBase;\n  normalizeCSS.absoluteURI = absoluteURI;\n  normalizeCSS.relativeURI = relativeURI;\n  \n  return normalizeCSS;\n});\n//>>excludeEnd('excludeRequireCss')\n;\n","/*\n * Require-CSS RequireJS css! loader plugin\n * 0.1.8\n * Guy Bedford 2014\n * MIT\n */\n\n/*\n *\n * Usage:\n *  require(['css!./mycssFile']);\n *\n * Tested and working in (up to latest versions as of March 2013):\n * Android\n * iOS 6\n * IE 6 - 10\n * Chome 3 - 26\n * Firefox 3.5 - 19\n * Opera 10 - 12\n * \n * browserling.com used for virtual testing environment\n *\n * Credit to B Cavalier & J Hann for the IE 6 - 9 method,\n * refined with help from Martin Cermak\n * \n * Sources that helped along the way:\n * - https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent\n * - http://www.phpied.com/when-is-a-stylesheet-really-loaded/\n * - https://github.com/cujojs/curl/blob/master/src/curl/plugin/css.js\n *\n */\n\ndefine('require-css/css',[],function() {\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  if (typeof window == 'undefined')\n    return { load: function(n, r, load){ load() } };\n\n  var head = document.getElementsByTagName('head')[0];\n\n  var engine = window.navigator.userAgent.match(/Trident\\/([^ ;]*)|AppleWebKit\\/([^ ;]*)|Opera\\/([^ ;]*)|rv\\:([^ ;]*)(.*?)Gecko\\/([^ ;]*)|MSIE\\s([^ ;]*)|AndroidWebKit\\/([^ ;]*)/) || 0;\n\n  // use <style> @import load method (IE < 9, Firefox < 18)\n  var useImportLoad = false;\n  \n  // set to false for explicit <link> load checking when onload doesn't work perfectly (webkit)\n  var useOnload = true;\n\n  // trident / msie\n  if (engine[1] || engine[7])\n    useImportLoad = parseInt(engine[1]) < 6 || parseInt(engine[7]) <= 9;\n  // webkit\n  else if (engine[2] || engine[8])\n    useOnload = false;\n  // gecko\n  else if (engine[4])\n    useImportLoad = parseInt(engine[4]) < 18;\n\n//>>excludeEnd('excludeRequireCss')\n  //main api object\n  var cssAPI = {};\n\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  cssAPI.pluginBuilder = './css-builder';\n\n  // <style> @import load method\n  var curStyle, curSheet;\n  var createStyle = function () {\n    curStyle = document.createElement('style');\n    head.appendChild(curStyle);\n    curSheet = curStyle.styleSheet || curStyle.sheet;\n  }\n  var ieCnt = 0;\n  var ieLoads = [];\n  var ieCurCallback;\n  \n  var createIeLoad = function(url) {\n    curSheet.addImport(url);\n    curStyle.onload = function(){ processIeLoad() };\n    \n    ieCnt++;\n    if (ieCnt == 31) {\n      createStyle();\n      ieCnt = 0;\n    }\n  }\n  var processIeLoad = function() {\n    ieCurCallback();\n \n    var nextLoad = ieLoads.shift();\n \n    if (!nextLoad) {\n      ieCurCallback = null;\n      return;\n    }\n \n    ieCurCallback = nextLoad[1];\n    createIeLoad(nextLoad[0]);\n  }\n  var importLoad = function(url, callback) {\n    if (!curSheet || !curSheet.addImport)\n      createStyle();\n\n    if (curSheet && curSheet.addImport) {\n      // old IE\n      if (ieCurCallback) {\n        ieLoads.push([url, callback]);\n      }\n      else {\n        createIeLoad(url);\n        ieCurCallback = callback;\n      }\n    }\n    else {\n      // old Firefox\n      curStyle.textContent = '@import \"' + url + '\";';\n\n      var loadInterval = setInterval(function() {\n        try {\n          curStyle.sheet.cssRules;\n          clearInterval(loadInterval);\n          callback();\n        } catch(e) {}\n      }, 10);\n    }\n  }\n\n  // <link> load method\n  var linkLoad = function(url, callback) {\n    var link = document.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    if (useOnload)\n      link.onload = function() {\n        link.onload = function() {};\n        // for style dimensions queries, a short delay can still be necessary\n        setTimeout(callback, 7);\n      }\n    else\n      var loadInterval = setInterval(function() {\n        for (var i = 0; i < document.styleSheets.length; i++) {\n          var sheet = document.styleSheets[i];\n          if (sheet.href == link.href) {\n            clearInterval(loadInterval);\n            return callback();\n          }\n        }\n      }, 10);\n    link.href = url;\n    head.appendChild(link);\n  }\n\n//>>excludeEnd('excludeRequireCss')\n  cssAPI.normalize = function(name, normalize) {\n    if (name.substr(name.length - 4, 4) == '.css')\n      name = name.substr(0, name.length - 4);\n\n    return normalize(name);\n  }\n\n//>>excludeStart('excludeRequireCss', pragmas.excludeRequireCss)\n  cssAPI.load = function(cssId, req, load, config) {\n\n    (useImportLoad ? importLoad : linkLoad)(req.toUrl(cssId + '.css'), load);\n\n  }\n\n//>>excludeEnd('excludeRequireCss')\n  return cssAPI;\n});\n\n","define('map',[\"eventServices/mapCenterChanged\", \"eventServices/stopAdded\", \"nativeApp/nativeAppCallbacks/onLocationChanged\", \r\n    \"text!customControls/focusMapControl.html\", \"require-css/css!customControls/focusMapControl.css\"], \r\n    function(mapCenterChanged, stopAdded, onLocationChanged, focusMapControlTemplate, focusMapControlCss) {\r\n\r\n    var map;\r\n    var mapMover;\r\n    var locationUpdatedOnce = false;\r\n    var locationMarker;\r\n\r\n    function initialize() {\r\n        var lat = 32.08;\r\n        var lng = 34.781;\r\n        var initialLocation = new google.maps.LatLng(lat, lng);\r\n        map = new google.maps.Map(document.getElementById('map-canvas'), {\r\n            center: initialLocation,\r\n            streetViewControl: false,\r\n            panControl: false,\r\n            zoomControlOptions: {\r\n                style: google.maps.ZoomControlStyle.SMALL,\r\n                position: google.maps.ControlPosition.RIGHT_BOTTOM\r\n            },\r\n            mapTypeControlOptions: {\r\n                mapTypeIds: [\r\n                    google.maps.MapTypeId.ROADMAP,\r\n                    google.maps.MapTypeId.SATELLITE\r\n                ]\r\n            },\r\n            zoom: 17\r\n        });\r\n\r\n        registerMapEvents();\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(function(pos) { \r\n                if (pos && pos.coords) {\r\n                    updateLocation(pos.coords.latitude, pos.coords.longitude);\r\n                }\r\n            })\r\n        }\r\n\r\n        onLocationChanged.listen(updateLocation)\r\n    }\r\n\r\n    function updateLocation(lat, lng) {\r\n        var location = new google.maps.LatLng(lat, lng);\r\n        if (!locationUpdatedOnce) {\r\n            locationUpdatedOnce = true;\r\n            map.setCenter(location);\r\n            mapCenterChanged.broadcastNow();\r\n        }\r\n\r\n        if (!locationMarker) {\r\n            var circle = {\r\n                path: google.maps.SymbolPath.CIRCLE,\r\n                fillColor: 'blue',\r\n                fillOpacity: .6,\r\n                scale: 6,\r\n                strokeColor: 'black',\r\n                strokeWeight: 1\r\n            };\r\n\r\n            locationMarker = new google.maps.Marker({\r\n                position: location,\r\n                icon: circle,\r\n                map: map,\r\n            });\r\n\r\n            var controlDiv = $(focusMapControlTemplate);\r\n            controlDiv.click(function() {\r\n                map.panTo(locationMarker.position);\r\n            });\r\n            map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(controlDiv[0]);\r\n        }\r\n        else {\r\n            locationMarker.setPosition(location);\r\n        }\r\n    }\r\n\r\n    function getCenter() {\r\n        return map.getCenter();\r\n    }\r\n\r\n    function registerMapEvents() {\r\n        google.maps.event.addListener(map, 'idle', function() {\r\n            mapCenterChanged.broadcastDelayed(getCenter);\r\n        });\r\n    }\r\n\r\n    function addIdleListenerOnce(callback) { \r\n        google.maps.event.addListenerOnce(map, 'idle', function() {\r\n            callback();\r\n        }); \r\n    }\r\n\r\n    initialize();\r\n\r\n    return {\r\n        panTo: function(location) { map.panTo(location); },\r\n        getCenter: getCenter,\r\n        addIdleListenerOnce: addIdleListenerOnce,\r\n        googleMap: map\r\n    };\r\n});\n","\ndefine('require-css/css!customControls/focusMapControl',[],function(){});\n","define('parseClient',[],function() {\r\n    function extractStop(obj) {\r\n        return {\r\n            code: obj.get(\"code\"),\r\n            name: obj.get(\"name\"),\r\n            town: obj.get(\"town\"),\r\n            location: obj.get(\"location\")\r\n        };\r\n    }\r\n\r\n    return {\r\n        getNearbyStops: function(lat, lng) {\r\n            var point = new Parse.GeoPoint(lat, lng);\r\n            var query = new Parse.Query(Parse.Object.extend(\"stop\"));\r\n            query.near(\"location\", point);\r\n            query.limit(10);\r\n            return query.find().then(function(objs) {\r\n                return $.map(objs, extractStop);\r\n            });\r\n        },\r\n\r\n        getStopByCode: function(stopCode) {\r\n            var query = new Parse.Query(Parse.Object.extend(\"stop\"));\r\n            query.equalTo(\"code\", stopCode);\r\n            return query.first().then(extractStop);\r\n        }\r\n    }\r\n});\n","define('stopCache',[\"parseClient\", \"eventServices/stopAdded\"], function(parseClient, stopAdded) {\r\n\tvar stops = {};\r\n    \t\t\r\n\tfunction exists(stop) {\r\n        return stops[stop.code] !== undefined;\r\n\t}\r\n\r\n    function byDistanceFrom(centerGeoPoint) {\r\n    \treturn function(stop1, stop2) {\r\n\t        distance1 = stop1.location.kilometersTo(centerGeoPoint);\r\n\t        distance2 = stop2.location.kilometersTo(centerGeoPoint);\r\n\t        return distance1 - distance2;\r\n\t    };\r\n    }\r\n\r\n    function getStopsAround(centerLat, centerLng, maxDisatnceKm) {\r\n        var centerGeoPoint = new Parse.GeoPoint(centerLat, centerLng);\r\n        var nearbyStops = []\r\n        for (var stopCode in stops) {\r\n            if (stops[stopCode].location.kilometersTo(centerGeoPoint) < maxDisatnceKm) {\r\n                nearbyStops.push(stops[stopCode])\r\n            }\r\n        }\r\n    \tnearbyStops.sort(byDistanceFrom(centerGeoPoint));\r\n        return nearbyStops;\r\n    }\r\n\r\n    function addStopsAround(centerLat, centerLng) {\r\n        parseClient.getNearbyStops(centerLat, centerLng).then(function(nearbyStops) {\r\n            nearbyStops.forEach(function(stop) {\r\n                if (!exists(stop)) {\r\n                    stops[stop.code] = stop;\r\n                    stopAdded.broadcast(stop);\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    function getOrAdd(stopCode) {\r\n        var d = $.Deferred();\r\n        var stop = stops[stopCode];\r\n        if (stop) {\r\n            d.resolve(stop);\r\n        }\r\n        else {\r\n            parseClient.getStopByCode(stopCode).then(function(stop) {\r\n                stops[stop.code] = stop;\r\n                d.resolve(stop);\r\n            })\r\n        }\r\n        return d.promise();\r\n    }\r\n\r\n\treturn {\r\n\t\tgetStopsAround: getStopsAround,\r\n        addStopsAround: addStopsAround,\r\n        getOrAdd: getOrAdd,\r\n        get: function(stopCode) {\r\n            return stops[stopCode];\r\n        }\r\n\t};\r\n});\r\n    \n","define(\"eventServices/mapStopClicked\", [],function() {\r\n\tvar callbacks = $.Callbacks();\r\n\r\n\treturn {\r\n\t\tbroadcast: function(stop) { callbacks.fire(stop); },\r\n\t    listen: function(callback) { callbacks.add(callback); }\r\n\t};\r\n});\n","define('mapStops',[\"map\", \"stopCache\", \"eventServices/mapCenterChanged\", \"eventServices/mapStopClicked\", \"eventServices/stopAdded\", \"utils/distance\"], \r\nfunction(map, stopCache, mapCenterChanged, mapStopClicked, stopAdded, distance) {\r\n\r\n    function searchForStops() {\r\n        stopCache.addStopsAround(map.getCenter().lat(), map.getCenter().lng());\r\n    }\r\n\r\n    var image = {\r\n        url: 'images/bus_marker.png',\r\n        size: new google.maps.Size(33, 61),\r\n        origin: new google.maps.Point(0, 0),\r\n        anchor: new google.maps.Point(16, 63)\r\n    };\r\n\r\n    function createStopMarker(stop) {\r\n        var stopMarker = new google.maps.Marker({\r\n            map: map.googleMap,\r\n            title: stop.name,\r\n            icon: image,\r\n            position: new google.maps.LatLng(stop.location.latitude, stop.location.longitude)\r\n        });\r\n\r\n        google.maps.event.addListener(stopMarker, 'click', function() {\r\n            mapStopClicked.broadcast(stop);\r\n        });\r\n    }\r\n\r\n    mapCenterChanged.listen(function() {\r\n        searchForStops();\r\n    });\r\n\r\n    stopAdded.listen(createStopMarker);\r\n\r\n    searchForStops();\r\n});\n","define(\"geolocationTracker\", [\"map\"], function(map) {\r\n    var locationMarker;\r\n\r\n\tfunction createLocationMarker() {\r\n        return new google.maps.Marker({\r\n            clickable: false,\r\n            icon: new google.maps.MarkerImage('//maps.gstatic.com/mapfiles/mobile/mobileimgs2.png', new google.maps.Size(22, 22), new google.maps.Point(0, 18), new google.maps.Point(11, 11)),\r\n            shadow: null,\r\n            zIndex: 999,\r\n            map: map.googleMap\r\n        });\r\n    }\r\n\r\n    function trackLocation() {\r\n        navigator.geolocation.getCurrentPosition(function(pos) {\r\n            var me = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);\r\n            locationMarker.setPosition(me);\r\n        }, function(error) {\r\n            // No location\r\n        });\r\n    }\r\n\r\n    function initialize() {\r\n    \tlocationMarker = createLocationMarker();\r\n\t\tif (navigator.geolocation) trackLocation();\r\n    }\r\n\r\n    initialize();\r\n});\n","define(\"eventServices/addressEntered\", [],function() {\r\n\tvar callbacks = $.Callbacks();\r\n\r\n\treturn {\r\n\t\tbroadcast: function(lat, lng) { callbacks.fire(lat, lng); },\r\n\t    listen: function(callback) { callbacks.add(callback); }\r\n\t};\r\n});\n","define('searchBar',[\"map\", \"eventServices/mapStopClicked\", \"eventServices/addressEntered\", \"stopCache\"], \r\nfunction(map, mapStopClicked, addressEntered, stopCache) {\r\n   \tvar geocoder = new google.maps.Geocoder();\r\n    \r\n    function initSearchBar() {\r\n        autocomplete = new google.maps.places.Autocomplete((document.getElementById('address')), { \r\n            types: ['geocode'],\r\n            componentRestrictions: {'country':'il'}\r\n        });\r\n\r\n        google.maps.event.addListener(autocomplete, 'place_changed', function() {\r\n            onAddressEntered();\r\n            blurControls();\r\n            $('#searchCollapse').collapse('hide');\r\n        });\r\n\r\n        $('#address').blur(function() { $('#searchCollapse').collapse('hide'); })\r\n        $(\"#address\").click(function() { $(\"#address\").select(); } );\r\n    }    \r\n\r\n    function getLocation(address) {\r\n        var promise = $.Deferred();\r\n        geocoder.geocode( { 'address': address}, function(results, status) {\r\n            if (status == google.maps.GeocoderStatus.OK) {\r\n                promise.resolve(results[0].geometry.location);\r\n            } else {\r\n                promise.reject();\r\n            }\r\n        });\r\n        return promise;\r\n    }    \r\n\r\n    function onAddressEntered() {\r\n        var address = document.getElementById('address').value;\r\n        if (isNaN(address)) {\r\n            getLocation(address).done(function(location) {\r\n                addressEntered.broadcast(location.lat(), location.lng());\r\n            });\r\n        } \r\n        else {\r\n            stopCache.getOrAdd(parseInt(address)).then(function(stop) {\r\n                mapStopClicked.broadcast(stop);\r\n            });\r\n        }\r\n    }\r\n\r\n    function blurControls() {\r\n        // Unfocus the text box to remove keyboard on Android\r\n        var activeElement = document.activeElement;\r\n        if (activeElement) {\r\n           activeElement.blur();\r\n        } else if (document.parentElement) {\r\n           document.parentElement.focus();\r\n        } else {\r\n           window.focus();\r\n        }\r\n    }\r\n\r\n    initSearchBar();\r\n});\r\n\n","define('mapPageScroller',[\"map\", \"eventServices/mapStopClicked\", \"eventServices/addressEntered\", \"eventServices/mapCenterChanged\"], \r\nfunction(map, mapStopClicked, addressEntered, mapCenterChanged) {\r\n\tfunction scrollTo(selector, completeCallback) {\r\n\t\tvar scrollPos = $(selector).offset().top;\r\n\t\t$('body,html').animate({ scrollTop: scrollPos}, 500, completeCallback);\r\n\t}\r\n\r\n\tmapStopClicked.listen(function(stop) {\r\n\t\tmap.panTo(new google.maps.LatLng(stop.location.latitude, stop.location.longitude));\r\n\t\tsetTimeout(function() {\r\n\t\t\tscrollTo(\"#nearby-stops-section\");\r\n\t\t}, 700);\r\n\t})\r\n\r\n\taddressEntered.listen(function(lat, lng) {\r\n\t\tscrollTo(\r\n\t\t\t\"#map-section\",\r\n\t\t\tfunction() {\r\n\t\t\t\tmap.addIdleListenerOnce(function(){\r\n\t\t\t\t    mapCenterChanged.broadcastNow();\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmap.panTo(new google.maps.LatLng(lat, lng));\r\n\t\t\t});\r\n\t});\r\n\r\n\treturn {\r\n\t\tshowOnMap: function(lat, lng) {\r\n\t\t\tscrollTo(\r\n\t\t\t\t\"#map-section\",\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tmap.panTo(new google.maps.LatLng(lat, lng));\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n});\n","define('angular/tahanotApp',[],function() {\r\n\tvar app = angular.module(\"tahanot\", []); \r\n\r\n    // For parsing query params with $location\r\n    app.config(['$locationProvider', function($locationProvider) {\r\n        $locationProvider.html5Mode({\r\n          enabled: true,\r\n          requireBase: false\r\n        });\r\n    }]);\r\n\r\n\treturn {\r\n\t\tapp: app\r\n\t};\r\n});\n","define('nativeApp/bridge',[\"eventServices/stopAdded\"], function(stopAdded) {\r\n\tvar wasStopDisplayedSent = false\r\n\r\n\tfunction onStopsDisplayed() {\r\n\t\tif (wasStopDisplayedSent) return;\r\n\t\twasStopDisplayedSent = true;\r\n\t\t\r\n\t\tif (window.AndroidBridge) {\r\n        \twindow.AndroidBridge.onFirstStopDisplayed();\r\n        }\r\n        else {\r\n        \tconsole.log(\"Bridge: onFirstStopDisplayed\");\r\n        }\r\n    }\r\n\r\n    function onStopSelected(stopCode, stopName) {\r\n    \tif (window.AndroidBridge) {\r\n        \twindow.AndroidBridge.onStopSelected(stopCode, stopName);\r\n        }\r\n        else {\r\n        \tconsole.log(\"Bridge: onStopSelected: \" + stopCode + \", \" + stopName);\r\n        }\r\n    }\r\n\r\n    function requestStopMonitoring(stopCode) {\r\n        if (window.AndroidBridge) {\r\n            window.AndroidBridge.requestStopMonitoring(stopCode);\r\n        }\r\n        else {\r\n            console.log(\"Bridge: requestStopMonitoring\");\r\n            setTimeout(function() {\r\n                var visit = function(line) { return {\"ExpectedArrivalTime\":\"\\/Date(1427919976000)\\/\",\"PublishedLineName\":\"\"+(line*100),\"DestinationRef\":\"21165\"} }\r\n                onMonitoringInfoArrived([stopCode], {\"Stops\": [{\"MotiroringRef\":stopCode,\"StopVisits\": Array.apply(null, new Array(2)).map(function(_, x){return visit(x)}) }],\"ResponseTimestamp\":\"\\/Date(1427919007162)\\/\"});\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    stopAdded.listen(function() {\r\n        return onStopsDisplayed();\r\n    })\r\n\r\n\treturn {\r\n\t\tonStopSelected: onStopSelected,\r\n        // getStopCode: getStopCode,\r\n        // getStopName: getStopName,\r\n        requestStopMonitoring: requestStopMonitoring\r\n\t}\r\n});\n","define('nativeApp/nativeAppCallbacks/onMonitoringInfoArrived',[],function() {\r\n    var callbacks = $.Callbacks();\r\n\r\n    window.onMonitoringInfoArrived = function(stopCodes, monitoringInfo) {\r\n        visitsByStopCode = initVisitsMap(stopCodes);\r\n        addVisits(visitsByStopCode, monitoringInfo);\r\n        fireCallbacks(visitsByStopCode);\r\n    };\r\n\r\n    function initVisitsMap(stopCodes) {\r\n        visitsByStopCode = [];\r\n        stopCodes.forEach(function(stopCode) {\r\n            visitsByStopCode[stopCode] = [];\r\n        })\r\n        return visitsByStopCode;\r\n    }\r\n\r\n    function addVisits(visitsByStopCode, monitoringInfo) {\r\n        monitoringInfo.Stops.forEach(function(monitoringStop) {\r\n            var stopCode = monitoringStop.MotiroringRef;\r\n            var visits = [];\r\n\r\n            monitoringStop.StopVisits.forEach(function(visit) {\r\n                var minutesToArrival = minutesBetween(parseDate(monitoringInfo.ResponseTimestamp), parseDate(visit.ExpectedArrivalTime));\r\n                visits.push({\r\n                    lineNumber: visit.PublishedLineName,\r\n                    destinationRef: parseInt(visit.DestinationRef),\r\n                    minutesToArrival: minutesToArrival,\r\n                    isAlreadyHere: (minutesToArrival < 1)\r\n                });\r\n            });\r\n            visitsByStopCode[stopCode] = visits;            \r\n        });\r\n    }\r\n\r\n    function fireCallbacks(visitsByStopCode) {\r\n        for (var stopCode in visitsByStopCode) {\r\n            var visits = visitsByStopCode[stopCode];\r\n            callbacks.fire(parseInt(stopCode), visits);\r\n        };\r\n    }\r\n\r\n    function parseDate(msAjaxDate) {\r\n        return new Date(parseInt(msAjaxDate.replace(\"/Date(\", \"\").replace(\")/\",\"\"), 10));\r\n    }\r\n\r\n    function minutesBetween(olderDate, newerDate) {\r\n        return Math.floor((newerDate - olderDate) / 60000);\r\n    }\r\n\r\n    return {\r\n        listen: function(callback) { callbacks.add(callback); }\r\n    }\r\n});\n","define('stopMonitoringCache',[\"nativeApp/bridge\", \"nativeApp/nativeAppCallbacks/onMonitoringInfoArrived\"], function(bridge, onMonitoringInfoArrived) {\r\n\r\n    const cacheTimeout = 30000;\r\n\r\n    function Stop(stopCode) {\r\n        var thisStop = this;\r\n        this.stopCode = stopCode;\r\n        this.ageOfData = undefined;\r\n        this.lastRequestSent = undefined;\r\n        this.visits = [];\r\n        this.deferreds = [];\r\n\r\n        this.updateVisits = function(visits) {\r\n            thisStop.visits = visits;\r\n            thisStop.ageOfData = new Date();\r\n            thisStop.deferreds.forEach(function(deferred)  {\r\n                deferred.resolve(visits);\r\n            });\r\n            thisStop.deferreds = [];\r\n        }\r\n\r\n        this.requestStopMonitoring = function(deferred) {\r\n            this.ageOfData = undefined;\r\n            bridge.requestStopMonitoring(stopCode);\r\n            thisStop.lastRequestSent = new Date();\r\n            thisStop.deferreds = [deferred];\r\n        }\r\n    }\r\n\r\n    function get(stopCode, force, giveUpAfter) {\r\n        var deferred = $.Deferred();\r\n\r\n        var stop = getOrAddStop(stopCode);\r\n\r\n        if (force) {\r\n            stop.requestStopMonitoring(deferred);\r\n            prepareToGiveUp(deferred, giveUpAfter);\r\n        }\r\n        else if (isRecent(stop.ageOfData)) {\r\n            deferred.resolve(stop.visits);\r\n        }\r\n        else if (isRecent(stop.lastRequestSent)) {\r\n            stop.deferreds.push(deferred);\r\n            prepareToGiveUp(deferred, giveUpAfter);\r\n        }\r\n        else {\r\n            stop.requestStopMonitoring(deferred);\r\n            prepareToGiveUp(deferred, giveUpAfter);\r\n        }\r\n\r\n        return deferred.promise();\r\n    }\r\n\r\n    var stops = [];\r\n\r\n    function getOrAddStop(stopCode)\r\n    {\r\n        var stop = getStop(stopCode);\r\n        if (!stop) {\r\n            stop = new Stop(stopCode);\r\n            stops.push(stop);\r\n        }\r\n        return stop;\r\n    }\r\n\r\n    function getStop(stopCode) {\r\n        for (var i = 0; i < stops.length; i++) {\r\n            if (stops[i].stopCode === stopCode) {\r\n                return stops[i];\r\n            }\r\n        };        \r\n    }\r\n\r\n    function isRecent(time) {\r\n        return time && (time > new Date() - cacheTimeout);\r\n    }\r\n\r\n    function prepareToGiveUp(deferred, giveUpAfter) {\r\n        setTimeout(function() {\r\n            deferred.reject();\r\n        }, giveUpAfter);\r\n    }\r\n\r\n    onMonitoringInfoArrived.listen(function(stopCode, visits) {\r\n        var stop = getStop(stopCode);\r\n        if (!stop) return;\r\n        stop.updateVisits(visits);\r\n    })\r\n\r\n    return {\r\n        get: get,\r\n        cacheTimeout: cacheTimeout\r\n    }\r\n});\n","define('nativeApp/nativeAppCallbacks/setIsForWidget',[],function() {\r\n    var callbacks = $.Callbacks();\r\n\r\n    window.setIsForWidget = function(isForWidget) {\r\n        callbacks.fire(isForWidget);\r\n    };\r\n\r\n    return {\r\n        listen: function(callback) { callbacks.add(callback); }\r\n    }\r\n});\n","require([\"angular/tahanotApp\", \"map\", \"stopCache\", \"stopMonitoringCache\", \"nativeApp/bridge\", \"mapPageScroller\", \"eventServices/mapStopClicked\", \r\n\t\"eventServices/mapCenterChanged\", \"eventServices/stopAdded\", \"nativeApp/nativeAppCallbacks/setIsForWidget\"], \r\nfunction(tahanotApp, map, stopCache, stopMonitoringCache, bridge, mapPageScroller, mapStopClicked, mapCenterChanged, stopAdded, setIsForWidget) {\r\n\r\n\ttahanotApp.app.controller('nearbyStopsController', ['$scope', '$interval', function($scope, $interval) {\r\n\t    $scope.stops = [];\r\n\t    $scope.isForWidget = false;\r\n\t    var mapCenter;\r\n\t    var selectedStopCode;\r\n\r\n\t    $scope.selectForWidget = function(stopModel) { \r\n\t    \tbridge.onStopSelected(stopModel.stopCode, stopModel.name);\r\n\t    };\r\n\r\n\t    $scope.showOnMap = function(stopModel) {\r\n\t    \tselectedStopCode = stopModel.code;\r\n\t    \tmapPageScroller.showOnMap(stopModel.lat, stopModel.lng);\r\n\t    }\r\n\r\n\t\t$scope.refreshVisits = function(stopModel) { \r\n\t\t\tgetVisits(stopModel, true);\r\n\t\t}\r\n\r\n\t    function refresh() {    \t\t\r\n    \t\t$scope.stops = [];\r\n        \tvar regularStops = stopCache.getStopsAround(map.getCenter().lat(), map.getCenter().lng(), 5);\r\n    \t\t\r\n    \t\tif (selectedStopCode) {\r\n        \t\tvar selectedStop = stopCache.get(selectedStopCode)\r\n        \t\taddStopModel(createStopModel(selectedStop, true));\r\n        \t}\r\n\r\n        \tregularStops.slice(0,8).forEach(function(stop) {\r\n\t    \t\tif (stop.code != selectedStopCode) {\r\n\t\t    \t\taddStopModel(createStopModel(stop, false));\r\n\t\t    \t}\r\n\t    \t});\r\n\t    }\r\n\r\n\t    function createStopModel(stop, isSelected) {\r\n\t    \tif (!stop.location) {\r\n\t    \t\tconsole.log(stop.code);\r\n\t    \t}\r\n\t\t\treturn {\r\n    \t\t\tstopCode: stop.code,\r\n    \t\t\tname: stop.name,\r\n    \t\t\tlat: stop.location.latitude,\r\n    \t\t\tlng: stop.location.longitude,\r\n    \t\t\tvisitsAvailable: false,\r\n    \t\t\tisSelected: isSelected\r\n    \t\t}\r\n\t    }\r\n\r\n\t    function addStopModel(stopModel) {\r\n\t    \t$scope.stops.push(stopModel);\r\n\t    \tgetVisits(stopModel);\r\n\t    \t\r\n\t    \tstopModel.timelyRefresh = $interval(function() {\r\n\t    \t\tif ($scope.stops.indexOf(stopModel) === -1) {\r\n\t\t    \t\t$interval.cancel(stopModel.timelyRefresh);\r\n\t\t    \t};\r\n\t    \t\tgetVisits(stopModel);\r\n\t    \t}, stopMonitoringCache.cacheTimeout + 1000) // Make sure there's a cache miss next time\r\n\t    }\r\n\r\n\t\tfunction getVisits(stopModel, force) {\r\n\t\t    stopModel.isReceivingVisits = true;\r\n\t    \tstopModel.failedReceivingVisits = false;\r\n    \t\tstopMonitoringCache.get(stopModel.stopCode, force, 30000).then(function(visits) {\r\n\t\t\t\tcallInScope(function() {\r\n\t    \t\t\tif ($scope.stops.indexOf(stopModel) === -1) return;\r\n\t    \t\t\tstopModel.visits = visits;\r\n\t    \t\t\tstopModel.isReceivingVisits = false;\r\n\t    \t\t\tvisits.forEach(function(visit) {\r\n\t    \t\t\t\tstopCache.getOrAdd(visit.destinationRef).then(function(destinationStop) {\r\n\t    \t\t\t\t\tcallInScope(function() {\r\n\t\t    \t\t\t\t\tvisit.destination = destinationStop.name + \", \" + destinationStop.town;\r\n\t\t    \t\t\t\t});\r\n\t    \t\t\t\t});\r\n\t\t    \t\t});\r\n\t    \t\t});\r\n\t\t\t},\r\n\t\t\tfunction(e) { // fail\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\t$scope.$apply(function() {\r\n\t\t\t\t\tstop.isReceivingVisits = false;\r\n\t\t\t\t\tstop.failedReceivingVisits = true;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t    function callInScope(f) { if (!$scope.$$phase) { $scope.$apply(f); } else { f(); } }\r\n\r\n\t\tmapCenterChanged.listen(function() { $scope.$apply(refresh); });\r\n\t    \r\n\t    stopAdded.listen(function() { \r\n\t    \t$scope.$apply(function() {\r\n\t    \t\tif (!$scope.stops || !$scope.stops.length) {\r\n\t\t\t    \trefresh();\t\t    \t\r\n\t\t\t    }\r\n\t\t    }); \r\n\t    });\r\n\t    \r\n\t    mapStopClicked.listen(function(stop) { selectedStopCode = stop.code; })\r\n\r\n\t    setIsForWidget.listen(function(isForWidget) { \r\n\t    \t$scope.$apply(function() { \r\n\t    \t\t$scope.isForWidget = isForWidget; \r\n\t    \t}); \r\n\t    })\r\n\t}]);\r\n\r\n\tangular.element(document).ready(function() {\r\n\t    angular.bootstrap(document, [\"tahanot\"]);\r\n\t    $(\"#nearby-stops-section\").show();\r\n\t});\t\r\n});\r\n\ndefine(\"angular/nearbyStopsController\", function(){});\n\n"]}